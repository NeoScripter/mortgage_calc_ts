(()=>{"use strict";var e={503:(e,t,r)=>{r.r(t)},156:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),r(503);const o=n(r(709));document.addEventListener("DOMContentLoaded",(()=>{(new o.default).init()}))},709:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=new Intl.NumberFormat(void 0);t.default=class{constructor(){this.resultsPreview=document.querySelector(".results__preview"),this.resultsPanel=document.querySelector(".results__wrapper"),this.calculateBtn=document.querySelector(".calc__calculate-btn"),this.hiddenPreviewClass="results__preview--hidden",this.inputTextFields=document.querySelectorAll('input[type="text"]'),this.errorHolderSelector=".calc__error",this.inputParentSelector=".calc__field",this.inputErrorClass="calc__field--error",this.radioBtnErrorField=".calc__radio-field .calc__error",this.mortgageType="repayment",this.mortgageTypeBtns=document.querySelectorAll('input[name="type"]'),this.currency="£",this.currencyBtns=document.querySelectorAll('input[name="currency"]'),this.currencySymbol=document.querySelector("#currency-symbol"),this.mortgageAmountField=document.querySelector('input[name="amount"]'),this.mortgageTermField=document.querySelector('input[name="term"]'),this.mortgageRateField=document.querySelector('input[name="rate"]'),this.monthlyField=document.querySelector("#monthlyResult"),this.totalField=document.querySelector("#totalResult"),this.amountField=document.querySelector('input[name="amount"]'),this.clearBtn=document.querySelector("#clear-all-btn"),this.conversionRates=new Map([["$_€",.85],["$_£",.75],["€_$",1.18],["€_£",.88],["£_$",1.33],["£_€",1.14]])}init(){this.calculate(),this.setupMortgageTypeSelection(),this.setupMortgageCurrencySelection(),this.clearFields()}calculate(){this.calculateBtn?this.calculateBtn.addEventListener("click",(()=>{this.displayResults()})):console.warn("Button or panel are not found in the DOM!")}showResult(){this.resultsPreview?this.resultsPreview.classList.remove(this.hiddenPreviewClass):console.warn("Panel is not found in the DOM!")}hideResult(){this.resultsPreview?this.resultsPreview.classList.add(this.hiddenPreviewClass):console.warn("Panel is not found in the DOM!")}clearFields(){this.clearBtn?this.clearBtn.addEventListener("click",(()=>{this.inputTextFields?(this.inputTextFields.forEach((e=>{e.value=""})),this.hideResult()):console.warn("Inputs are not in the DOM")})):console.warn("Button is not in the DOM")}calculateMonthlyRepaymentInterest(){const e=this.calculateMortgageAmount(),t=this.calculateMontlyInterestRate();if(void 0===e||void 0===t)return;const r=e*t;return this.roundUpToTwoDecimals(r)}calculateTotalRepaymentInterest(){const e=this.calculateMortgageAmount(),t=this.calculateTotalRepayment();if(void 0===e||void 0===t)return;const r=t-e;return this.roundUpToTwoDecimals(r)}calculateMonthlyRepayment(){const e=this.calculateMortgageAmount(),t=this.calculateMontlyInterestRate(),r=this.calculateTotalNumberOfPayments();if(void 0===e||void 0===t||void 0===r)return;const n=e*(t*(1+t)**r/((1+t)**r-1));return this.roundUpToTwoDecimals(n)}calculateTotalRepayment(){const e=this.calculateTotalNumberOfPayments(),t=this.calculateMonthlyRepayment();if(void 0===e||void 0===t)return;const r=t*e;return this.roundUpToTwoDecimals(r)}displayResults(){if(!this.monthlyField||!this.totalField)return void console.warn("Could not find display inputs in the DOM");let e,t;"interest"===this.mortgageType?(e=this.calculateMonthlyRepaymentInterest(),t=this.calculateTotalRepaymentInterest()):"repayment"===this.mortgageType&&(e=this.calculateMonthlyRepayment(),t=this.calculateTotalRepayment()),void 0!==e&&void 0!==t?(this.monthlyField.value=this.currency+r.format(e),this.totalField.value=this.currency+r.format(t),this.showResult()):this.hideResult()}roundUpToTwoDecimals(e){return Math.ceil(100*e)/100}calculateMortgageAmount(){const e=this.validateInput(this.mortgageAmountField,!0);if("number"==typeof e)return e;console.log("Amount is undefined!")}calculateMontlyInterestRate(){const e=this.validateInput(this.mortgageRateField);if("number"==typeof e)return e/12/100;console.log("Rate is undefined!")}calculateTotalNumberOfPayments(){const e=this.validateInput(this.mortgageTermField);if("number"==typeof e)return 12*e;console.log("Term is undefined!")}setupMortgageTypeSelection(){this.mortgageTypeBtns?this.mortgageTypeBtns.forEach((e=>{e.checked&&(this.mortgageType=e.id),e.addEventListener("change",(e=>{const t=e.target;t.checked&&(this.mortgageType=t.id)}))})):console.warn("Radio buttons are not found in the DOM!")}setupMortgageCurrencySelection(){this.currencyBtns&&this.currencySymbol?this.currencyBtns.forEach((e=>{e.checked&&(this.convertCurrency(this.currency,e.value),this.currency=e.value,this.currencySymbol.textContent=e.value),e.addEventListener("change",(e=>{const t=e.target;t.checked&&(this.convertCurrency(this.currency,t.value),this.currency=t.value,this.currencySymbol.textContent=t.value)}))})):console.warn("Radio buttons or currency span are not found in the DOM!")}getConversionRate(e,t){const r=`${e}_${t}`;return this.conversionRates.get(r)}convertCurrency(e,t){if(!this.amountField)return void console.warn("Amount field is not found");const n=this.amountField.value;if(isNaN(Number(n))||""===n)return;const o=this.getConversionRate(e,t),i=Number(n);void 0!==o&&(this.amountField.value=`${r.format(this.roundUpToTwoDecimals(i*o))}`)}displayError(e,t){const r=t.closest(this.inputParentSelector),n=null==r?void 0:r.querySelector(this.errorHolderSelector);null==r||r.classList.add(this.inputErrorClass),n?n.textContent=e:console.warn("Couldn't find the error field")}resetErrorField(e){const t=e.closest(this.inputParentSelector),r=null==t?void 0:t.querySelector(this.errorHolderSelector);null==t||t.classList.remove(this.inputErrorClass),r?r.textContent="":console.warn("Couldn't find the error field")}validateInput(e,t=!1){if(!e)return void console.warn("Couldn't find the input field");let r=e.value.trim();if(t&&(r=r.replace(/[,]/g,"")),""===r){const t="Please fill in this field!";return void this.displayError(t,e)}const n=Number(r);if(isNaN(n)){const t="Please enter a valid number!";this.displayError(t,e)}else if(n<0){const t="The number should not be negative!";this.displayError(t,e)}else{if(isFinite(n))return this.resetErrorField(e),n;{const t="The number is too large or too small!";this.displayError(t,e)}}}}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(156)})();